block content
  h1 Generación de Orden de Trabajo
  form(action="/generacion-orden", method="POST")
    div
      label(for="paciente") Paciente:
      input(type="text", name="paciente", id="paciente", value=nombre + " " + apellido + " (DNI: " + dni + ")", readonly)
      input(type="hidden", name="id_paciente", value=id_paciente)
    div
      label(for="estado") Estado de la Orden:
      select(name="estado", id="estado")
        option(value="ingresada") Ingresada
        option(value="esperando-toma-muestra") Esperando Toma de Muestra
        option(value="analitica") Analítica
    div
      label(for="examenes") Exámenes:
      input(type="text", id="examSearch", placeholder="Buscar exámenes...")
      div#examResults
        // Aquí se mostrarán los resultados de búsqueda de exámenes
      select(name="examenes", id="examenesSelect", multiple)
        // Aquí se mostrarán los exámenes seleccionados
    div
      label Tipos de Muestra:
      each tipo in tiposMuestra
        div
          input(type="checkbox", name="tipos_muestra[]", value=tipo.value, id=tipo.value)
          label(for=tipo.value)= tipo.label
          select(name="estado_" + tipo.value, id="estado_" + tipo.value)
            option(value="esperando_toma_muestra") Esperando Toma de Muestra
            option(value="analitica") Analítica
    button(type="submit") Generar Orden de Trabajo

  script.
    // JavaScript para manejar la búsqueda, selección y eliminación de exámenes
    const examSearchInput = document.getElementById("examSearch");
    const examResults = document.getElementById("examResults");
    const selectedExams = document.getElementById("examenesSelect");

    // Lista de todos los exámenes (recibidos desde el servidor)
    const examenes = !{JSON.stringify(examenes)};

    examSearchInput.addEventListener("input", () => {
        const searchTerm = examSearchInput.value.toLowerCase();
        const filteredExams = examenes.filter(examen => {
            return examen.nombre_examen.toLowerCase().includes(searchTerm) || examen.codigo.toLowerCase().includes(searchTerm);
        });

        // Limpiar resultados anteriores
        examResults.innerHTML = "";

        filteredExams.forEach(examen => {
            const option = document.createElement("option");
            option.value = examen.id;
            option.textContent = `${examen.nombre_examen} (Código: ${examen.codigo})`;
            examResults.appendChild(option);
        });
    });

    // Manejar la selección de exámenes
    examResults.addEventListener("click", (event) => {
        if (event.target.tagName === "OPTION") {
            const selectedOption = event.target;
            selectedExams.appendChild(selectedOption);
        }
    });

    // Manejar la eliminación de exámenes al hacer doble clic
    selectedExams.addEventListener("dblclick", (event) => {
        if (event.target.tagName === "OPTION") {
            const removedOption = event.target;
            removedOption.remove();
        }
    });

    // Ocultar la lista de resultados cuando se hace clic fuera del campo de búsqueda
    document.addEventListener("click", (event) => {
        if (event.target !== examSearchInput && event.target !== examResults) {
            examResults.innerHTML = "";
        }
    });
